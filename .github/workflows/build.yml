name: Template
on:
  schedule:
    - cron: "0 0 * * *"
  push:
    paths-ignore:
      - "**/docs/**"
      - "**.md"
permissions:
  contents: read
  id-token: write
jobs:
  build:
    name: build-${{ matrix.type }}-${{ matrix.rs-channel }}-${{ matrix.rs-version }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        include:
          - type: bin
            rs-channel: stable
            rs-version: "1.88.0"
            rs-profile: default
          - type: bin
            rs-channel: nightly
            rs-version: "2025-05-09"
            rs-profile: default
          - type: lib
            rs-channel: stable
            rs-version: "1.88.0"
            rs-profile: default
          - type: lib
            rs-channel: nightly
            rs-version: "2025-05-09"
            rs-profile: default
    env:
      PROJECT_NAME: template
      PROJECT_DESCRIPTION: "A template project"
      GH_ORG: template
      GH_REPO: template
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/determinate-nix-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          extra-conf: |
            experimental-features = nix-command flakes

      - name: Setup Nix cache
        if: ${{ !env.ACT }}
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal

      - name: Setup Rust cache
        if: ${{ !env.ACT }}
        uses: mozilla-actions/sccache-action@v0.0.9

      - name: Enable Rust cache
        if: ${{ !env.ACT }}
        run: |
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV

      - name: Install cargo-generate
        run: cargo install cargo-generate@0.22.1

      - name: Generate template
        run: |
          mkdir $RUNNER_TEMP/output && cargo generate \
            --${{ matrix.type }} \
            --silent \
            --allow-commands \
            --path . \
            --name ${{ env.PROJECT_NAME }} \
            --destination $RUNNER_TEMP/output \
            --define project-description="${{ env.PROJECT_DESCRIPTION }}" \
            --define gh-org=${{ env.GH_ORG }} \
            --define gh-repo=${{ env.GH_REPO }} \
            --define rs-channel=${{ matrix.rs-channel }} \
            --define rs-version=${{ matrix.rs-version }} \
            --define rs-profile=${{ matrix.rs-profile }}

      - name: Initialize Git repository
        run: |
          cd $RUNNER_TEMP/output/${{ env.PROJECT_NAME }}
          git init -q
          git add .

      - name: Check template [Nix]
        run: |
          cd $RUNNER_TEMP/output/${{ env.PROJECT_NAME }}
          nix flake check --all-systems

      - name: Check template [Rust]
        run: |
          cd $RUNNER_TEMP/output/${{ env.PROJECT_NAME }}
          nix develop --command just check
