name: Template
on:
  schedule:
    - cron: "0 0 * * *"
  push:
    paths-ignore:
      - "**/docs/**"
      - "**.md"
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: template
      PROJECT_DESCRIPTION: "A template project"
      GH_USERNAME: template
    strategy:
      matrix:
        type: [bin, lib]
    name: Build ${{ matrix.type }}
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v3
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cargo-bins/cargo-binstall@main
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: "1.88.0"
          override: true
          components: rustfmt, clippy
      - run: cargo binstall --no-confirm cargo-generate@0.22.1
      - run: mkdir $RUNNER_TEMP/output

      - name: Generate template
        run: |
          cargo generate \
            --${{ matrix.type }} \
            --silent \
            --allow-commands \
            --path . \
            --name ${{ env.PROJECT_NAME }} \
            --destination $RUNNER_TEMP/output \
            --define project-description="${{ env.PROJECT_DESCRIPTION }}" \
            --define gh-username=${{ env.GH_USERNAME }}

      - name: Initialize Git repository
        run: |
          cd $RUNNER_TEMP/output/${{ env.PROJECT_NAME }}
          git init -q
          git add .

      - name: Check template [Rust]
        run: |
          just \
            --justfile $RUNNER_TEMP/output/${{ env.PROJECT_NAME }}/justfile \
            --working-directory $RUNNER_TEMP/output/${{ env.PROJECT_NAME }} \
            check

      - name: Check template [Nix]
        run: |
          nix flake check \
            --all-systems \
            $RUNNER_TEMP/output/${{ env.PROJECT_NAME }}
