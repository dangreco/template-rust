---
name: CD
permissions:
  contents: write
  pull-requests: write
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  cd-create-pr:
    name: PR
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'dangreco' }}
    permissions:
      contents: write
      pull-requests: write
    concurrency:
      group: release-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          {% if rs-channel == "stable" %}
          toolchain: {{ rs-version }}
          {% elif rs-channel == "nightly" %}
          toolchain: nightly-{{ rs-version }}
          {% endif %}
          default: true
          override: true
          profile: {{ rs-profile }}
      - name: Run release-plz pr
        uses: release-plz/action@v0.5
        with:
          command: release-pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  cd-create-release:
    name: Create
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'dangreco' }}
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          {% if rs-channel == "stable" %}
          toolchain: {{ rs-version }}
          {% elif rs-channel == "nightly" %}
          toolchain: nightly-{{ rs-version }}
          {% endif %}
          default: true
          override: true
          profile: {{ rs-profile }}
      - name: Run release-plz
        uses: release-plz/action@v0.5
        with:
          command: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
